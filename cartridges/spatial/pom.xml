<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>com.oracle.cep.cql</groupId>
        <artifactId>cartridges</artifactId>
        <version>12.2.1.3-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.oracle.cep</groupId>
    <artifactId>cartridge.spatial</artifactId>
    <packaging>bundle</packaging>
    <name>Cartridge.spatial</name>
    <url>http://maven.apache.org</url>
    <properties>
         <!-- Only unit tests are run by default. -->
        <skip.ha.unit.tests>true</skip.ha.unit.tests>
	<junit.version>4.11</junit.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.bea.core</groupId>
            <artifactId>apache.commons.logging.api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.cep</groupId>
            <artifactId>server</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.cep</groupId>
            <artifactId>server</artifactId>
            <scope>compile</scope>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>oracle.sdo</groupId>
            <artifactId>sdoapi</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>oracle.sdo</groupId>
            <artifactId>sdotopo</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>oracle.sdo</groupId>
            <artifactId>sdoutl</artifactId>
            <scope>compile</scope>
        </dependency>
<!--        
        <dependency>
            <groupId>com.vividsolutions</groupId>
            <artifactId>jts</artifactId>
            <scope>compile</scope>
        </dependency>
-->        
        <dependency>
            <groupId>com.oracle.cep</groupId>
            <artifactId>logging</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.cep</groupId>
            <artifactId>cartridge.java</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.cep</groupId>
            <artifactId>cartridge.geocodedb</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>bdb.je</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.cep.cql</groupId>
            <artifactId>colt</artifactId>
            <scope>compile</scope>
       </dependency>
        <dependency>
            <groupId>javax.xml</groupId>
            <artifactId>bind</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>jaxb-impl</groupId>
            <artifactId>jaxb-impl</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>activation</artifactId>
            <scope>compile</scope>
        </dependency>          
       <dependency>
           <groupId>xmlparserv2</groupId>
           <artifactId>xmlparserv2</artifactId>
           <scope>compile</scope>
       </dependency>
        <dependency>
            <groupId>orai18n-collation</groupId>
            <artifactId>orai18n-collation</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.fastinfoset</groupId>
            <artifactId>FastInfoset</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>xquery</groupId>
            <artifactId>xquery</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>ojdbc6</groupId>
            <artifactId>ojdbc6</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
       
    </dependencies>
    <build>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>**/.ade_path/**</exclude>
                </excludes>
           </resource>           
            <resource>
                <directory>../../nls/modules/cqlengine/cartridges/spatial/target/classes/</directory>
                <includes>
                    <include>**/*_*.properties</include>
                </includes>
                <excludes>
                    <exclude>**/.ade_path/**</exclude>
                </excludes>
           </resource>
        </resources>
        <plugins>
            <plugin>
               <groupId>org.jvnet.jaxb2.maven2</groupId>
                <artifactId>maven-jaxb2-plugin</artifactId>
                <executions>
                    <execution>
                        <id>osrxml-req-gen</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <schemaDirectory>${project.basedir}/src/main/resources/schema</schemaDirectory>
                            <generateDirectory>${project.build.generatedsrc}</generateDirectory>
                            <schemaIncludes>
                                <include>**/osrxml_req.xsd</include>
                            </schemaIncludes>
                            <bindingDirectory>src/main/resources</bindingDirectory>
                            <bindingIncludes>
                                <include>**/osrxml_req.xjb</include>
                            </bindingIncludes>                    
                            <generatePackage>com.oracle.cep.cartridge.spatial.router.osrxml.req</generatePackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>osrxml-resp-gen</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <schemaDirectory>${project.basedir}/src/main/resources/schema</schemaDirectory>
                            <generateDirectory>${project.build.generatedsrc}</generateDirectory>
                            <schemaIncludes>
                                <include>**/osrxml_resp.xsd</include>
                            </schemaIncludes>
                            <bindingDirectory>src/main/resources</bindingDirectory>
                            <bindingIncludes>
                                <include>**/osrxml_resp.xjb</include>
                            </bindingIncludes>                    
                            <generatePackage>com.oracle.cep.cartridge.spatial.router.osrxml.resp</generatePackage>
                        </configuration>
                    </execution>
		    <execution>
                        <id>osgxml-req-gen</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <schemaDirectory>${project.basedir}/src/main/resources/schema</schemaDirectory>
                            <generateDirectory>${project.build.generatedsrc}</generateDirectory>
                            <schemaIncludes>
                                <include>**/geocoder_request.xsd</include>
                            </schemaIncludes>
                            <bindingDirectory>src/main/resources</bindingDirectory>
                            <bindingIncludes>
                                <include>**/geocoder_request.xjb</include>
                            </bindingIncludes>                    
                            <generatePackage>com.oracle.cep.cartridge.spatial.geocode.osgxml.req</generatePackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>osgxml-resp-gen</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <schemaDirectory>${project.basedir}/src/main/resources/schema</schemaDirectory>
                            <generateDirectory>${project.build.generatedsrc}</generateDirectory>
                            <schemaIncludes>
                                <include>**/geocoder_resp.xsd</include>
                            </schemaIncludes>
                            <bindingDirectory>src/main/resources</bindingDirectory>
                            <bindingIncludes>
                                <include>**/geocoder_resp.xjb</include>
                            </bindingIncludes>                    
                            <generatePackage>com.oracle.cep.cartridge.spatial.geocode.osgxml.resp</generatePackage>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <excludeDependencies>*;artifactId=!sdoapi|sdoutl|sdotopo|gson|jaxb-impl|activation|bind|xmlparserv2</excludeDependencies>
                    <instructions>
                        <Bundle-Version>${wlevs.version}</Bundle-Version>
                        <Bundle-SymbolicName>com.oracle.cep.cartridge.spatial</Bundle-SymbolicName>
                        <Export-Package>
                            com.oracle.cep.cartridge.spatial*;version=${wlevs.version},
                            com.oracle.cep.cartridge.spatial.router.osrxml.req;version=${wlevs.version},
                            com.oracle.cep.cartridge.spatial.router.osrxml.resp;version=${wlevs.version},
                            com.oracle.cep.cartridge.spatial.geocode.osgxml.req;version=${wlevs.version},
                            com.oracle.cep.cartridge.spatial.geocode.osgxml.resp;version=${wlevs.version},
                            oracle.spatial.topo;version=${oracle.cep.version},
                            oracle.spatial.geometry;version=${oracle.cep.version},
                            oracle.spatial.util;version=${oracle.cep.version},
                            com.google.gson
                        </Export-Package>
                        <Import-Package>
                            com.bea.wlevs*;version=${wlevs.version};resolution:=optional,                           
                            com.bea.wlevs.ede.api;version=${wlevs.version},
                            com.bea.wlevs.eventtyperepo.event;version=${wlevs.version},
                            com.bea.wlevs.spring.support;version=${wlevs.version},
                            com.bea.wlevs.util;version=${wlevs.version},
                            oracle.cep*;version=${oracle.cep.version},
                            com.oracle.cep*;version=${wlevs.version},
                            com.oracle.cep.cartridge.geocodedb;version=${wlevs.version},
                            org.apache.commons.logging,
                            cern.colt*,
                            com.sleepycat.je*,
                            com.sleepycat.bind*,
                            org.springframework.osgi*;version=${spring.osgi.version},
                            org.springframework*;version=${spring.version},
                            org.springframework.osgi.extensions.annotation;version=${spring.osgi.version},
                            org.springframework.osgi.service.exporter.support;version=${spring.osgi.version},
                            org.springframework.osgi.service.importer.support;version=${spring.osgi.version},
                            org.osgi.framework, org.w3c.dom, weblogic.i18n.logging, weblogic.logging,
                            javax.sql,
                            javax.xml,				
                            javax.xml.bind,
                            javax.xml.bind.annotation,
                            javax.xml.bind.util,
                            javax.xml.namespace,
                            javax.xml.parsers,
                            javax.activation, 
                            javax.imageio, 
                            javax.imageio.stream, 
                            javax.xml.datatype, 
                            javax.xml.stream, 
                            javax.xml.stream.events, 
                            javax.xml.transform, 
                            javax.xml.transform.dom, 
                            javax.xml.transform.sax, 
                            javax.xml.transform.stream, 
                            javax.xml.validation, 
                            com.sun.xml.bind.v2
                        </Import-Package>
                        <Embed-Dependency>
                            gson;scope=compile,
                            sdoapi;scope=compile,
                            sdotopo;scope=compile,
                            sdoutl;scope=compile,
                            bind;scope=compile,
                            jaxb-impl;scope=compile,
                            activation;scope=compile,
                            xmlparserv2;scope=compile,
                            FastInfoset;scope=compile;inline=false,
                            xquery;scope=compile;inline=false,
                            orai18n-collation;scope=runtime;inline=false
                        </Embed-Dependency>
                        <DynamicImport-Package>
                            javax.xml.stream, javax.xml.stream.events, javax.xml.stream.util, javax.xml.transform.dom,
                            javax.xml.transform.sax, javax.xml.xpath, oracle.i18n.text, oracle.i18n.util, oracle.jdbc,
                            oracle.jdbc.driver, oracle.jdbc.internal, oracle.jdbc.pool, oracle.sql, oracle.xdb,
                            oracle.xdb.dom, oracle.xml.sql, oracle.xml.sql.query, org.apache.regexp, org.w3c.dom.ranges,
                            org.w3c.dom.traversal, org.xml.sax.ext,
                            com.sun.xml.fastinfoset, com.sun.xml.fastinfoset.algorithm, com.sun.xml.fastinfoset.sax, com.sun.xml.fastinfoset.stax, com.sun.xml.fastinfoset.util, com.sun.xml.fastinfoset.vocab, 
                            javax.xml.transform.stax, 
                            oracle.spatial.type, 
                            org.jvnet.fastinfoset, org.jvnet.staxex, org.w3c.dom.events, org.w3c.dom.ls, 
                            org.xml.sax, org.xml.sax.helpers, 
                            sun.awt.geom, sun.misc, junit.framework, junit.textui
                        </DynamicImport-Package>
                        <Extension-Name>
                            oep.cartridge.spatial
                        </Extension-Name>
                    </instructions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- TODO handle failed test -->
                    <systemPropertyVariables>
                        <ade.view.root>${project.basedir}</ade.view.root>
                        <test.inputFolder>../../test/data</test.inputFolder>
                        <test.outputFolder>target</test.outputFolder>
                        <twork>target</twork>
                    </systemPropertyVariables>
                </configuration>

                <executions>
                  <execution>
                   <id>default-test</id>
                   <configuration>
                     <excludes>
                        <exclude>**/TestGeometryGeodetic.java</exclude>
                        <exclude>**/TestJsonUtil.java</exclude>
                     </excludes>
                   </configuration>
                  </execution>

                  <execution>
                    <id>ha-unit-test</id>
                    <goals>
                      <goal>test</goal>
                    </goals>
                    <configuration>
                      <systemPropertyVariables>
                        <test.inputFolder>${project.basedir}/src/test/resources/data/ha</test.inputFolder>
                        <test.outputFolder>${project.basedir}/target</test.outputFolder>
                        <test.logFolder>${project.basedir}/src/test/resources/log/ha</test.logFolder>
			<db.properties>${env.OSA_HOME}/infra/db.properties</db.properties>
                      </systemPropertyVariables>
		      <includes>
			 <include>**/HATest*.java</include>
		      </includes>
		      <skipTests>${skip.ha.unit.tests}</skipTests>
                    </configuration>
                  </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
<!--  TODO_JTS enable it after third party license is approved
                    <excludeDependencies>*;artifactId=!sdoapi|sdoutl|sdotopo|jts|gson|jaxb-impl|activation|bind|xmlparserv2</excludeDependencies>
                        <Embed-Dependency>
                            jts;scope=compile,
                        </Embed-Dependency>
-->                        
