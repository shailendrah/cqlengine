<CEP xmlns="http://xmlns.oracle.com/cep">
<CEP_DDL> create external relation tkExtOuterJoin_R1(c1 integer)</CEP_DDL>
<CEP_DDL> create external relation tkExtOuterJoin_R2(c1 integer, c2 integer)</CEP_DDL>
<CEP_DDL> create external relation tkExternal_R3 (d1 timestamp, d2 char(10))</CEP_DDL>
<CEP_DDL> create stream tkExtOuterJoin_S1(c1 integer, c2 bigint, c3 char(10)) </CEP_DDL>
<CEP_DDL> create stream tkExtOuterJoin_S2(c1 integer, c2 timestamp) </CEP_DDL>
<CEP_DDL> create stream tkExtOuterJoin_S3(c1 integer, c2 float) </CEP_DDL>

<CEP_DDL> <![CDATA[ alter relation tkExtOuterJoin_R1 add source "<EndPointReference><Address>external:soainfra</Address></EndPointReference>"]]> </CEP_DDL>
<CEP_DDL> <![CDATA[ alter relation tkExtOuterJoin_R2 add source "<EndPointReference><Address>external:soainfra</Address></EndPointReference>"]]> </CEP_DDL>
<CEP_DDL> <![CDATA[ alter relation tkExternal_R3 add source "<EndPointReference><Address>external:soainfra</Address></EndPointReference>"]]> </CEP_DDL>
<CEP_DDL> <![CDATA[ alter stream tkExtOuterJoin_S1 add source "<EndPointReference><Address>file://@TEST_DATA@/inpS25.txt?convertTs=false</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter stream tkExtOuterJoin_S2 add source "<EndPointReference><Address>file://@TEST_DATA@/inpS15.txt?convertTs=false</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter stream tkExtOuterJoin_S3 add source "<EndPointReference><Address>file://@TEST_DATA@/inpS4.txt?convertTs=false</Address></EndPointReference>"]]>  </CEP_DDL>

<CEP_DDL> create function getCQLInteger(c1 java.lang.Integer) return integer as language java name "oracle.cep.test.userfunctions.TkUsrConvert"</CEP_DDL>

<!-- Demonstrate the right outer join of an external relation with CQL relation -->
<CEP_DDL> create query tkExtOuterJoin_q1 as select * from tkExtOuterJoin_R1 as Ext right outer join tkExtOuterJoin_S1[NOW] as S on Ext.c1 in (1,2,3,5) </CEP_DDL>

<!-- Negative Test: Joining an External relation(tkExtOuterJoin_R2) with a non-now relation -->
<CEP_DDL> create query tkExtOuterJoin_q2Neg as select * from tkExtOuterJoin_R1 as Ext, tkExtOuterJoin_S1[NOW] as S, tkExtOuterJoin_R2 as Ext2 where Ext.c1 in (1,2,3,5) </CEP_DDL>

<!-- Negative Test: External Relation should be outer join table -->
<CEP_DDL> create query tkExtOuterJoin_q3Neg as select * from tkExtOuterJoin_R1 as Ext left outer join tkExtOuterJoin_S1[NOW] as S on S.c1 = Ext.c1 </CEP_DDL>

<!-- Demonstrate the right outer join with equality predicate -->
<CEP_DDL> create query tkExtOuterJoin_q4 as select * from tkExtOuterJoin_R1 as Ext right outer join tkExtOuterJoin_S1[NOW] as S on S.c1 = Ext.c1 </CEP_DDL>

<!-- Demonstrate the outer join with composite key -->
<CEP_DDL> create query tkExtOuterJoin_q5 as select * from tkExtOuterJoin_R2 as Ext right outer join tkExtOuterJoin_S1[NOW] as S on S.c1 = Ext.c1 and S.c1 = Ext.c2</CEP_DDL>

<!-- Negative Test: Old Oracle sytle outer join (+) shouldnot be mixed with ANSI outer join -->
<CEP_DDL> create query tkExtOuterJoin_q5Neg as select * from tkExtOuterJoin_R1 as Ext right outer join tkExtOuterJoin_S1[NOW] as S on S.c1 = Ext.c1, tkExtOuterJoin_S1[rows 3] as S2 where S2.c1 = Ext.c1(+) </CEP_DDL>

<!-- Negative Test: External Relation should be joined with S[now] only -->
<CEP_DDL> create query tkExtOuterJoin_q6Neg as select * from tkExtOuterJoin_R1 as Ext right outer join tkExtOuterJoin_S1[NOW] as S on S.c1 = Ext.c1 left outer join tkExtOuterJoin_R2 as Ext2 on Ext2.c1 = 5 </CEP_DDL>

<!-- Demonstrate the right outer join with external relation -->
<CEP_DDL> create query tkExtOuterJoin_q7 as select tkExternal_R3.d1, tkExtOuterJoin_S2.c1, tkExtOuterJoin_S2.c2 from tkExternal_R3 RIGHT OUTER JOIN tkExtOuterJoin_S2[NOW] ON tkExternal_R3.d1 = tkExtOuterJoin_S2.c2 </CEP_DDL> 

<!-- Demonstrate Operator sharing in case when both join operator are ANSI join type -->
<CEP_DDL> create query tkExtOuterJoin_q8 as select tkExternal_R3.d1, tkExtOuterJoin_S2.c1, tkExtOuterJoin_S2.c2 from tkExtOuterJoin_S2[NOW] LEFT OUTER JOIN tkExternal_R3 ON tkExternal_R3.d1 = tkExtOuterJoin_S2.c2 </CEP_DDL> 

<!-- Demonstrate that operator sharing will not happen if join type is not same -->
<CEP_DDL> create query tkExtOuterJoin_q9 as select tkExternal_R3.d1, tkExtOuterJoin_S2.c1, tkExtOuterJoin_S2.c2 from tkExternal_R3 ,tkExtOuterJoin_S2[NOW] where tkExternal_R3.d1(+) = tkExtOuterJoin_S2.c2 </CEP_DDL> 

<!-- Demonstrate the multiple outer joins R LOJ ExtR ROJ R-->
<CEP_DDL> create query tkExtOuterJoin_q10 as select * from tkExtOuterJoin_S2[NOW] as A LEFT OUTER JOIN tkExternal_R3 as B ON B.d1 = A.c2 RIGHT OUTER JOIN tkExtOuterJoin_S2[NOW] as C ON B.d1 = C.c2 </CEP_DDL>

<!-- Demonstrate the normal join with ANSI outer join-->
<CEP_DDL> create query tkExtOuterJoin_q11 as select * from tkExtOuterJoin_S1[NOW] as C, tkExtOuterJoin_S1[NOW] as A LEFT OUTER JOIN tkExtOuterJoin_R1 as B ON B.c1 = A.c1 where B.c1 = C.c1 </CEP_DDL>

<!-- Demonstrate the outer join with TABLE function --> 
<CEP_DDL> create query tkExtOuterJoin_q12 as select A.c1, A.c2, B.c1 from tkExtOuterJoin_S3[NOW] as A LEFT OUTER JOIN table(oracle.cep.test.TestTableFunction.testLinkedList() as c1 of java.lang.Integer) as B ON getCQLInteger(B.c1) = A.c1</CEP_DDL>

<CEP_DDL> <![CDATA[ alter query tkExtOuterJoin_q1 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outtkextouterjoinq1.txt?convertTs=false</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkExtOuterJoin_q4 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outtkextouterjoinq4.txt?convertTs=false</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkExtOuterJoin_q5 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outtkextouterjoinq5.txt?convertTs=false</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkExtOuterJoin_q7 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outtkextouterjoinq7.txt?convertTs=false</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkExtOuterJoin_q8 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outtkextouterjoinq8.txt?convertTs=false</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkExtOuterJoin_q9 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outtkextouterjoinq9.txt?convertTs=false</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkExtOuterJoin_q10 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outtkextouterjoinq10.txt?convertTs=false</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkExtOuterJoin_q11 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outtkextouterjoinq11.txt?convertTs=false</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkExtOuterJoin_q12 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outtkextouterjoinq12.txt?convertTs=false</Address></EndPointReference>"]]>  </CEP_DDL>

<CEP_DDL> alter query tkExtOuterJoin_q1 start </CEP_DDL>
<CEP_DDL> alter query tkExtOuterJoin_q4 start </CEP_DDL>
<CEP_DDL> alter query tkExtOuterJoin_q5 start </CEP_DDL>
<CEP_DDL> alter query tkExtOuterJoin_q7 start </CEP_DDL>
<CEP_DDL> alter query tkExtOuterJoin_q8 start </CEP_DDL>
<CEP_DDL> alter query tkExtOuterJoin_q9 start </CEP_DDL>
<CEP_DDL> alter query tkExtOuterJoin_q10 start </CEP_DDL>
<CEP_DDL> alter query tkExtOuterJoin_q11 start </CEP_DDL>
<CEP_DDL> alter query tkExtOuterJoin_q12 start </CEP_DDL>
<CEP_DDL> alter system run</CEP_DDL>
</CEP>
