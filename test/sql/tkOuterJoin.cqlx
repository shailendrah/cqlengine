<CEP xmlns="http://xmlns.oracle.com/cep">
<CEP_DDL> create stream tkOuterJoin_S0 (c1 integer, c2 float) </CEP_DDL>
<CEP_DDL> create stream tkOuterJoin_S1 (c1 integer, c2 float) </CEP_DDL>
<CEP_DDL> create stream tkOuterJoin_S2 (c1 integer, c2 float) </CEP_DDL>

<CEP_DDL> <![CDATA[ alter stream tkOuterJoin_S0 add source "<EndPointReference><Address>file://@TEST_DATA@/outerjoin0.txt</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter stream tkOuterJoin_S1 add source "<EndPointReference><Address>file://@TEST_DATA@/outerjoin1.txt</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter stream tkOuterJoin_S2 add source "<EndPointReference><Address>file://@TEST_DATA@/inpS0.txt</Address></EndPointReference>"]]>  </CEP_DDL>                

<CEP_DDL> create view tkOuterJoin_v1 (c1 integer, c2 float) as select * from tkOuterJoin_S0[rows 2] </CEP_DDL>
<CEP_DDL> create view tkOuterJoin_v2 (c1 integer, c2 float) as select * from tkOuterJoin_S1[rows 2] </CEP_DDL>

<!-- Demonstrate the left outer join -->
<CEP_DDL> create query tkOuterJoin_q0 as select * from tkOuterJoin_S0[rows 2] as R1 left outer join tkOuterJoin_S1[rows 2] as R2 on R1.c2 = R2.c2 </CEP_DDL>

<!-- Demonstrate the sharing of outer join operator -->
<CEP_DDL> create query tkOuterJoin_q1 as select * from tkOuterJoin_S0[rows 2] as R1 left outer join tkOuterJoin_S1[rows 2] as R2 on R1.c2 = R2.c2</CEP_DDL>

<!-- Demonstrate the right outer join-->
<CEP_DDL> create query tkOuterJoin_q2 as select * from tkOuterJoin_S0[rows 2] as R1 right outer join tkOuterJoin_S1[rows 2] as R2 on R2.c2 = R1.c2 </CEP_DDL>

<!-- Demonstrate that RStream over join of two windows (now & any other) will not become Binstreamjoin -->
<CEP_DDL> create query tkOuterJoin_q3 as RStream(select * from tkOuterJoin_S0[now] as R1 left outer join tkOuterJoin_S1[rows 2] as R2 on R1.c2 = R2.c2 )</CEP_DDL>

<!-- Demonstrate the composite key over left outer join -->
<CEP_DDL> create query tkOuterJoin_q4 as select * from tkOuterJoin_S0[rows 2] as R1 left outer join tkOuterJoin_S2[rows 2] as R2 on R1.c2 = R2.c2 and R2.c1 = R1.c1</CEP_DDL>

<!-- Demonstrate the composite key over right outer join -->
<CEP_DDL> create query tkOuterJoin_q5 as select * from tkOuterJoin_S0[rows 2] as R1 right outer join tkOuterJoin_S2[rows 2] as R2 on R1.c2 = R2.c2 and R2.c1 = R1.c1</CEP_DDL>

<!-- Demonstrate that R1 LOJ R2 == R2 ROJ R1(number of output may differ; but Output(t) will always be same) -->
<CEP_DDL> create query tkOuterJoin_q6 as select * from tkOuterJoin_S2[rows 2] as R1 right outer join tkOuterJoin_S0[rows 2] as R2 on R1.c2 = R2.c2 and R2.c1 = R1.c1 </CEP_DDL>

<!-- Demonstrate the composite key with both ON Predicate and WHERE clause -->
<CEP_DDL> create query tkOuterJoin_q7 as select * from tkOuterJoin_S0[rows 2] as R1 left outer join tkOuterJoin_S1[rows 2] as R2 on R1.c1 > 2* R2.c1 where R2.c1 != 6 </CEP_DDL>

<!-- Demonstrate the fact that ANSI left outer join will not be shared with Oracle outer join(query similar to q1) -->
<CEP_DDL> create query tkOuterJoin_q8 as select * from tkOuterJoin_S0[rows 2] as R1, tkOuterJoin_S1[rows 2] as R2 where R1.c2 = R2.c2(+) </CEP_DDL>

<!-- Demonstrate the regular join of two ANSI outer joins -->
<CEP_DDL> <![CDATA[ create query tkOuterJoin_q9 as select * from tkOuterJoin_S0[rows 3] as R1 left outer join tkOuterJoin_S1[rows 3] as R2 on R1.c2 = R2.c2 , tkOuterJoin_S1[rows 3] as R3 right outer join tkOuterJoin_S2[rows 5] as R4 on R3.c2 < R4.c2 ]]> </CEP_DDL>

<!-- Demonstrate the multi join case e.g. R1 LOJ R2 ROJ R3 -->
<CEP_DDL> create query tkOuterJoin_q10 as select R1.c1,R1.c2,R2.c1,R2.c2,R3.c1,R3.c2 from tkOuterJoin_S0[rows 2] as R1 left outer join tkOuterJoin_S1[rows 2] as R2 on R1.c2 = R2.c2 right outer join tkOuterJoin_S2[rows 2] as R3 on R2.c2 = R3.c2 </CEP_DDL>

<!-- Demonstrate the multi join case with WHERE predicate e.g. R1 LOJ R2 ROJ R3 where <condition> -->
<CEP_DDL> create query tkOuterJoin_q11 as select R1.c1,R1.c2,R2.c1,R2.c2,R3.c1,R3.c2 from tkOuterJoin_S0[rows 2] as R1 left outer join tkOuterJoin_S1[rows 2] as R2 on R1.c2 = R2.c2 right outer join tkOuterJoin_S2[rows 2] as R3 on R2.c2 = R3.c2 where R1.c1 is not null </CEP_DDL>

<!-- Demonstrate the left outer join between two views -->
<CEP_DDL> create query tkOuterJoin_q12 as select * from tkOuterJoin_v1 as R1 left outer join tkOuterJoin_v2 as R2 on R1.c2 = R2.c2 </CEP_DDL>

<!-- Negative test cases. Bug : 9691954 -->
<CEP_DDL >create query tkOuterJoin_q13 as select * from tkOuterJoin_S2[rows 2] as R0,  tkOuterJoin_S0[rows 2] as R1 
left outer join tkOuterJoin_S1[rows 2] as R2 on R1.c2 = R0.c2 </CEP_DDL>

<CEP_DDL >create query tkOuterJoin_q14 as select * from tkOuterJoin_S2[rows 2] as R0,  tkOuterJoin_S0[rows 2] as R1 
left outer join tkOuterJoin_S1[rows 2] as R2 on R1.c2 = R2.c2 left outer join tkOuterJoin_S2[rows 2] as R3 on R0.c1 = R2.c1 </CEP_DDL>

<CEP_DDL >create query tkOuterJoin_q15 as select * from tkOuterJoin_S2[rows 2] as R0,  tkOuterJoin_S0[rows 2] as R1 
left outer join tkOuterJoin_S1[rows 2] as R2 on R3.c2 = R2.c2 left outer join tkOuterJoin_S2[rows 2] as R3 on R1.c1 = R3.c1 </CEP_DDL>

<CEP_DDL> <![CDATA[ alter query tkOuterJoin_q0 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outerjoin0.txt</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkOuterJoin_q1 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outerjoin1.txt</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkOuterJoin_q2 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outerjoin2.txt</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkOuterJoin_q3 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outerjoin3.txt?convertTs=false</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkOuterJoin_q4 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outerjoin4.txt</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkOuterJoin_q5 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outerjoin5.txt</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkOuterJoin_q6 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outerjoin6.txt</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkOuterJoin_q7 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outerjoin7.txt?convertTs=false</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkOuterJoin_q8 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outerjoin8.txt</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkOuterJoin_q9 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outerjoin9.txt</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkOuterJoin_q10 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outerjoin10.txt</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkOuterJoin_q11 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outerjoin11.txt</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> <![CDATA[ alter query tkOuterJoin_q12 add destination "<EndPointReference><Address>file://@TEST_OUTPUT@/outerjoin12.txt</Address></EndPointReference>"]]>  </CEP_DDL>
<CEP_DDL> alter query tkOuterJoin_q0 start </CEP_DDL>
<CEP_DDL> alter query tkOuterJoin_q1 start </CEP_DDL>
<CEP_DDL> alter query tkOuterJoin_q2 start </CEP_DDL>
<CEP_DDL> alter query tkOuterJoin_q3 start </CEP_DDL>
<CEP_DDL> alter query tkOuterJoin_q4 start </CEP_DDL>
<CEP_DDL> alter query tkOuterJoin_q5 start </CEP_DDL>
<CEP_DDL> alter query tkOuterJoin_q6 start </CEP_DDL>
<CEP_DDL> alter query tkOuterJoin_q7 start </CEP_DDL>
<CEP_DDL> alter query tkOuterJoin_q8 start </CEP_DDL>
<CEP_DDL> alter query tkOuterJoin_q9 start </CEP_DDL>
<CEP_DDL> alter query tkOuterJoin_q10 start </CEP_DDL>
<CEP_DDL> alter query tkOuterJoin_q11 start </CEP_DDL>
<CEP_DDL> alter query tkOuterJoin_q12 start </CEP_DDL>
<CEP_DDL> alter system run </CEP_DDL>
</CEP>
