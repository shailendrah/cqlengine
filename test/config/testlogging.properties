# logging.properties for tksrg/tklrg
# Properties file which configures the operation of the JDK 
# logging facility. 

# The system will look for this config file, first using 
# a System property specified at startup: 
# 
# >java -Djava.util.logging.config.file=<adepath>/pcbpel/cep/test/config/logging.properties 
# 
# If this property is not specified, then the config file is 
# retrieved from its default location at: 
# 
# JDK_HOME/jre/lib/logging.properties 
#
# Java Log Viewer
# chainsaw http://sourceforge.net/projects/logui/
# gjlv http://gjlv.sourceforge.net/
# logfeeder http://www.puzzlecode.com/puzzlecode/logfeeder
#
# Global logging properties. 
# ------------------------------------------ 
# The set of handlers to be loaded upon startup. 
# Comma-separated list of class names. 
# (? LogManager docs say no comma here, but JDK example has comma.) 
handlers=java.util.logging.FileHandler
#java.util.logging.SocketHandler 

# Default global logging level. 
# Loggers and Handlers may override this level 
.level=CONFIG 

# Loggers 
# ------------------------------------------ 
# Loggers are usually attached to packages. 
# Here, the level for each package is specified. 
# The global level is used by default, so levels 
# specified here simply act as an override. 
oracle.soa.cep.level=ALL 

# Handlers 
# ----------------------------------------- 

# --- ConsoleHandler --- 
# Override of global logging level 
java.util.logging.ConsoleHandler.level=CONFIG
java.util.logging.ConsoleHandler.formatter=oracle.cep.util.SimpleFormatter

# --- FileHandler --- 
# Override of global logging level 
java.util.logging.FileHandler.level=FINE

# Limiting size of output file in bytes: 
#java.util.logging.FileHandler.limit=500000000

# Naming style for the output file: 
java.util.logging.FileHandler.pattern=@LOG_FILE@ 

# Number of output files to cycle through, by appending an 
# integer to the base file name: 
java.util.logging.FileHandler.count=1 

# Style of output (Simple or XML): 
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter

